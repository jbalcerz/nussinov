Testing using memory profiler:
input: UGAACUGAAGAGUUUGAUCCUGGCUCAGAUUGAACGCUGGCGGGAUGCUUUACACAUGCAAGUCGGACGGCAGCACGGGCUUCGGCCUGGUGGCGAGUGGCGAACGGGUGAGUAAUGUAUCGGAACGUGCCCAGUAGCGGGGGAUAACUACGCGAAAGCGUGGCUAAUACCGCAUACGCCCUACGGGGGAAAGCGGGGGACCUUCGGGCCUCGCACUAUUGGAGCGGCCGAUAUCGGAUUAGCUAGUUGGUGGGGUAACGGCCUACCAAGGCGACGAUCCGUAGCUGGUUUGAGAGGACGACCAGCCACACUGGGACUGAGACACGGCCCAGACUCCUACGGGAGGCAGCAGUGGGGAAUUUUGGACAAUGGGGGCAACCCUGAUCCAGCCAUCCCGCGUGUGCGAUGAAGGCCUUCGGGUUGUAAAGCACUUUUGGCAGGAAAGAAACGGCACGGGCUAAUAUCCUGUGCAACUGACGGUACCUGCAGAAUAAGCACCGGCUAACUACGUGCCAGCAGCCGCGGUAAUACGUAGGGUGCAAGCGUUAAUCGGAAUUACUGGGCGUAAAGCGUGCGCAGGCGGUUCGGAAAGAAAGAUGUGAAAUCCCAGGGCUUAACCUUGGAACUGCAUUUUUAACUACCGGGCUAGAGUGUGUCAGAGGGAGGUGGAAUUCCGCGUGUAGCAGUGAAAUGCGUAGAUAUGCGGAGGAACACCGAUGGCGAAGGCAGCCUCCUGGGAUAACACUGACGCUCAUGCACGAAAGCGUGGGGAGCAAACAGGAUUAGAUACCCUGGUAGUCCACGCCCUAAACGAUGUCAACUAGCUGUUGGGGCCUUCGGGCCUUGGUAGCGCAGCUAACGCGUGAAGUUGACCGCCUGGGGAGUACGGUCGCAAGAUUAAAACUCAAAGGAAUUGACGGGGACCCGCACAAGCGGUGGAUGAUGUGGAUUAAUUCGAUGCAACGCGAAAAACCUUACCUACCCUUGACAUGUCUGGAAUCCCGAAGAGAUUUGGGAGUGCUCGCAAGAGAACCGGAACACAGGUGCUGCAUGGCUGUCGUCAGCUCGUGUCGUGAGAUGUUGGGUUAAGUCCCGCAACGAGCGCAACCCUUGUCAUUAGUUGCUACGAAAGGGCACUCUAAUGAGACUGCCGGUGACAAACCGGAGGAAGGUGGGGAUGACGUCAAGUCCUCAUGGCCCUUAUGGGUAGGGCUUCACACGUCAUACAAUGGUCGGGACAGAGGGUCGCCAACCCGCGAGGGGGAGCCAAUCCCAGAAACCCGAUCGUAGUCCGGAUCGCAGUCUGCAACUCGACUGCGUGAAGUCGGAAUCGCUAGUAAUCGCGGAUCAGCAUGUCGCGGUGAAUACGUUCCCGGGUCUUGUACACACCGCCCGUCACACCAUGGGAGUGGGUUUUACCAGAAGUAGUUAGCCUAACCGCAAGGGGGGCGAUUACCACGGUAGGAUUCAUGACUGGGGUGAAGUCGUAACAAGGUAGCCGUAUCGGAAGGUGCGGCUGGAUCACCUCCUUU
output: [(1, 1531), (2, 1530), (3, 1529), (6, 1527), (8, 1526), (9, 1525), (11, 1524), (14, 1523), (15, 1522), (16, 1521), (17, 1520), (18, 1519), (19, 1518), (21, 1517), (22, 1516), (23, 1515), (25, 1514), (27, 30), (31, 1513), (34, 1512), (35, 1511), (36, 1510), (37, 1509), (38, 48), (39, 47), (40, 46), (42, 45), (49, 1508), (50, 1507), (52, 1506), (53, 56), (57, 62), (58, 61), (63, 1505), (64, 1504), (65, 1503), (66, 1501), (67, 1500), (68, 1499), (69, 1498), (70, 1497), (72, 1495), (73, 1494), (74, 1487), (75, 1486), (77, 1485), (78, 1484), (79, 1483), (80, 1482), (81, 1481), (82, 1480), (84, 1479), (85, 1478), (86, 304), (87, 303), (88, 302), (89, 301), (90, 175), (91, 174), (92, 172), (93, 171), (94, 170), (96, 169), (97, 132), (98, 131), (99, 130), (100, 105), (101, 104), (106, 129), (107, 115), (108, 113), (109, 112), (116, 119), (120, 128), (121, 127), (122, 125), (133, 167), (134, 165), (135, 164), (136, 163), (137, 161), (138, 160), (139, 148), (140, 147), (141, 144), (150, 159), (151, 158), (152, 157), (176, 299), (177, 298), (178, 296), (179, 295), (180, 293), (181, 292), (183, 291), (184, 290), (185, 219), (186, 218), (187, 216), (188, 215), (192, 213), (193, 212), (194, 211), (195, 204), (196, 203), (197, 202), (198, 201), (205, 210), (206, 209), (220, 247), (221, 246), (222, 243), (223, 242), (224, 241), (225, 239), (226, 238), (227, 236), (228, 235), (229, 234), (230, 233), (248, 289), (249, 288), (250, 264), (251, 263), (252, 262), (253, 261), (254, 258), (265, 287), (266, 286), (269, 285), (270, 284), (271, 283), (272, 281), (274, 280), (275, 278), (305, 1477), (306, 1476), (308, 1475), (310, 1446), (311, 1435), (312, 1434), (313, 1433), (314, 1432), (316, 1431), (317, 1430), (318, 1429), (320, 1428), (322, 1427), (323, 1425), (324, 1424), (325, 1414), (326, 1413), (327, 1412), (328, 1411), (329, 1410), (331, 1409), (333, 1408), (334, 1407), (335, 1406), (336, 1405), (337, 1397), (338, 1395), (339, 1394), (340, 1393), (341, 1392), (342, 1391), (344, 1372), (345, 1371), (347, 1370), (348, 1369), (349, 1368), (351, 1367), (352, 1366), (353, 1365), (354, 361), (355, 360), (356, 359), (362, 391), (363, 390), (364, 389), (366, 388), (369, 387), (370, 386), (371, 381), (372, 380), (373, 379), (374, 378), (382, 385), (392, 1363), (393, 1362), (394, 1360), (395, 1359), (396, 1358), (397, 1357), (398, 1356), (399, 1349), (400, 1348), (401, 1288), (402, 1287), (403, 1286), (404, 1285), (405, 1284), (406, 1283), (407, 1281), (410, 1280), (411, 1279), (414, 1277), (415, 1276), (416, 1255), (417, 1254), (418, 1253), (419, 1252), (420, 1251), (421, 1250), (422, 1229), (423, 1228), (424, 433), (425, 432), (426, 431), (427, 430), (434, 1227), (435, 1151), (436, 1150), (437, 1149), (439, 1148), (440, 1121), (441, 1120), (442, 1117), (443, 1116), (444, 1114), (446, 1113), (447, 1073), (448, 1072), (449, 1071), (450, 1070), (451, 1069), (452, 1068), (453, 1067), (454, 1066), (455, 1065), (456, 1064), (458, 557), (459, 556), (460, 555), (461, 554), (463, 553), (464, 552), (465, 551), (467, 477), (468, 476), (470, 475), (471, 474), (478, 550), (479, 549), (480, 547), (481, 546), (482, 535), (483, 534), (484, 533), (485, 532), (486, 531), (488, 530), (491, 529), (493, 528), (494, 525), (495, 524), (497, 523), (498, 521), (499, 520), (500, 519), (501, 518), (502, 517), (504, 510), (505, 509), (511, 516), (512, 515), (536, 545), (537, 544), (538, 543), (539, 542), (558, 1063), (559, 1062), (561, 1061), (562, 1060), (563, 1059), (564, 1058), (565, 568), (569, 1057), (570, 1056), (571, 1055), (573, 1054), (574, 1053), (576, 1052), (578, 1051), (579, 1049), (580, 1048), (581, 1047), (582, 1046), (583, 1037), (584, 1036), (585, 1035), (586, 1021), (587, 1020), (590, 634), (591, 633), (592, 632), (593, 631), (594, 630), (595, 628), (596, 626), (598, 625), (599, 623), (600, 605), (601, 604), (606, 622), (607, 621), (608, 620), (609, 619), (610, 618), (611, 617), (613, 616), (636, 1018), (637, 1017), (638, 1016), (639, 999), (640, 996), (641, 995), (642, 994), (643, 993), (644, 992), (645, 991), (648, 651), (652, 990), (653, 989), (654, 988), (655, 987), (656, 986), (658, 985), (659, 984), (660, 983), (661, 982), (662, 981), (663, 979), (664, 978), (665, 977), (666, 976), (667, 717), (668, 671), (672, 716), (673, 715), (674, 704), (675, 703), (676, 702), (677, 701), (678, 700), (679, 699), (680, 696), (682, 695), (683, 694), (685, 693), (686, 692), (687, 691), (705, 714), (707, 713), (708, 711), (718, 975), (719, 974), (720, 838), (721, 837), (722, 836), (723, 835), (724, 834), (725, 833), (726, 832), (729, 831), (730, 830), (731, 738), (732, 737), (733, 736), (739, 829), (740, 828), (741, 827), (742, 826), (743, 825), (744, 823), (745, 822), (746, 821), (747, 814), (748, 812), (749, 764), (750, 763), (751, 760), (752, 759), (755, 758), (765, 811), (766, 808), (767, 807), (768, 806), (769, 805), (770, 804), (772, 799), (773, 785), (775, 783), (776, 782), (777, 780), (786, 798), (787, 796), (788, 795), (789, 794), (790, 793), (800, 803), (815, 820), (816, 819), (839, 973), (840, 958), (841, 956), (842, 909), (843, 907), (844, 906), (845, 905), (846, 904), (847, 893), (849, 892), (850, 891), (851, 890), (852, 870), (853, 869), (854, 868), (855, 867), (856, 865), (859, 864), (860, 863), (871, 889), (872, 888), (873, 887), (874, 886), (875, 880), (876, 879), (881, 884), (895, 903), (897, 902), (898, 901), (910, 955), (911, 954), (912, 953), (913, 952), (914, 951), (915, 950), (916, 949), (917, 926), (918, 925), (919, 924), (920, 923), (927, 947), (929, 946), (932, 945), (933, 944), (935, 943), (936, 942), (937, 940), (959, 965), (960, 964), (966, 972), (1000, 1015), (1001, 1014), (1002, 1013), (1003, 1012), (1006, 1011), (1007, 1010), (1022, 1034), (1023, 1033), (1024, 1027), (1029, 1032), (1038, 1045), (1039, 1044), (1040, 1043), (1074, 1111), (1075, 1110), (1076, 1081), (1077, 1080), (1082, 1109), (1083, 1108), (1084, 1107), (1085, 1106), (1086, 1105), (1089, 1104), (1091, 1103), (1092, 1101), (1093, 1099), (1094, 1098), (1122, 1147), (1123, 1145), (1124, 1144), (1126, 1143), (1127, 1142), (1130, 1139), (1131, 1138), (1132, 1137), (1133, 1136), (1152, 1226), (1153, 1224), (1154, 1223), (1155, 1222), (1156, 1221), (1157, 1220), (1161, 1205), (1162, 1204), (1163, 1203), (1164, 1201), (1165, 1200), (1166, 1199), (1167, 1198), (1170, 1197), (1171, 1194), (1172, 1193), (1173, 1192), (1174, 1191), (1175, 1190), (1176, 1189), (1177, 1188), (1178, 1185), (1179, 1184), (1180, 1183), (1206, 1219), (1207, 1218), (1209, 1217), (1210, 1215), (1211, 1214), (1230, 1249), (1231, 1248), (1232, 1237), (1233, 1236), (1238, 1247), (1240, 1246), (1242, 1245), (1256, 1275), (1257, 1273), (1259, 1272), (1260, 1271), (1261, 1270), (1262, 1267), (1263, 1266), (1289, 1347), (1290, 1346), (1291, 1345), (1292, 1344), (1293, 1343), (1294, 1341), (1295, 1340), (1296, 1339), (1297, 1318), (1298, 1317), (1299, 1316), (1300, 1315), (1301, 1314), (1302, 1313), (1303, 1312), (1305, 1311), (1307, 1310), (1319, 1338), (1320, 1337), (1322, 1334), (1323, 1333), (1325, 1332), (1326, 1331), (1327, 1330), (1350, 1355), (1351, 1354), (1373, 1390), (1374, 1389), (1375, 1388), (1376, 1379), (1380, 1387), (1381, 1386), (1382, 1385), (1398, 1404), (1399, 1403), (1415, 1423), (1416, 1422), (1418, 1421), (1437, 1445), (1438, 1444), (1440, 1443), (1447, 1474), (1448, 1473), (1449, 1471), (1450, 1470), (1452, 1469), (1453, 1462), (1454, 1461), (1455, 1460), (1456, 1459), (1463, 1468), (1464, 1467), (1490, 1493)]
=> elapsed time: 227.684104919 s
Filename: inputReader.py

Line #    Mem usage    Increment   Line Contents
================================================
    17    8.871 MiB    0.000 MiB       @profile
    18                                 def __init__(self,argv):
    19                                     '''
    20                                         Constructor
    21                                         '''
    22    8.879 MiB    0.008 MiB           self._helpText = 'main.py -i <inputfile> -o <outputfile> -r <raw data> \n' \
    23                                         '\t[-i input.txt -o output.txt]'
    24                                     
    25                                     
    26    8.879 MiB    0.000 MiB           self._dafaultInputFile = 'input.txt'
    27    8.879 MiB    0.000 MiB           self._dafaultOutputFile = 'output.txt'
    28    8.879 MiB    0.000 MiB           self._minimumChainLength = 2
    29    8.879 MiB    0.000 MiB           self._alphabet = list('ACGU')
    30    8.879 MiB    0.000 MiB           try:
    31    8.879 MiB    0.000 MiB               opts, args = getopt.getopt(argv,"hi:o:r:",["ifile=","ofile=","rdata="])
    32                                     except getopt.GetoptError:
    33                                         self._printHelp()
    34                                         sys.exit()
    35                                     
    36    8.879 MiB    0.000 MiB           if not ('-o' in opts[0]):
    37    8.883 MiB    0.004 MiB               self._handleNoOutputGiven()
    38                                     
    39    8.883 MiB    0.000 MiB           if opts == []:
    40                                         self._handleNoOptionsGiven()
    41                                         return
    42                                     
    43    8.887 MiB    0.004 MiB           self._checkIfOptsOk(opts)
    44                                     
    45    8.887 MiB    0.000 MiB           for opt, arg in opts:
    46    8.887 MiB    0.000 MiB               if opt == '-h':
    47                                             self._printHelp()
    48    8.887 MiB    0.000 MiB               elif opt in ("-i", "--ifile"):
    49    8.887 MiB    0.000 MiB                   self._handleInputFileGiven(arg)
    50    8.887 MiB    0.000 MiB               elif opt in ("-o", "--ofile"):
    51    8.887 MiB    0.000 MiB                   self._handleOutputFileGiven(arg)
    52                                         elif opt in ("-r", "--rdata"):
    53                                             self._handleRawDataGiven(arg)


